	
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// <copyright file="YwDiseaseRecordMap.cs">
//        Copyright(c)2015   rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：李文学@上海同岩土木科技工程有限公司
//        所属工程：TY.*
//        生成时间：2016-12-15 09:54
// </copyright>
//------------------------------------------------------------------------------

	using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

namespace TY.SHMetroPlan.Data.Domain.Models.Mapping
{
    public class YwDiseaseRecordMap : EntityTypeConfiguration<YwDiseaseRecord>
    {
        public YwDiseaseRecordMap()
        {
            // Primary Key
            this.HasKey(t => t.Id);

            // Properties
            this.Property(t => t.Id)
                .IsRequired()
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.RecordCode)
                .HasMaxLength(200);

            this.Property(t => t.LineCode)
                .HasMaxLength(200);

            this.Property(t => t.WorkAreaCode)
                .HasMaxLength(200);

            this.Property(t => t.EquipmentCode)
                .HasMaxLength(200);

            this.Property(t => t.EquipmentTypeCode)
                .HasMaxLength(200);

            this.Property(t => t.TurnouAreatCode)
                .HasMaxLength(200);

            this.Property(t => t.TurnouCode)
                .HasMaxLength(200);

            this.Property(t => t.DiseaseTypeCode)
                .HasMaxLength(200);

            this.Property(t => t.DiseaseOtherContent)
                .HasMaxLength(400);

            this.Property(t => t.FacilityCode)
                .HasMaxLength(200);

            // Table & Column Mappings
            this.ToTable("YwDiseaseRecord");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.RecordCode).HasColumnName("RecordCode");
            this.Property(t => t.CheckDataType).HasColumnName("CheckDataType");
            this.Property(t => t.LineCode).HasColumnName("LineCode");
            this.Property(t => t.WorkAreaCode).HasColumnName("WorkAreaCode");
            this.Property(t => t.EquipmentCode).HasColumnName("EquipmentCode");
            this.Property(t => t.EquipmentTypeCode).HasColumnName("EquipmentTypeCode");
            this.Property(t => t.TurnouAreatCode).HasColumnName("TurnouAreatCode");
            this.Property(t => t.TurnouCode).HasColumnName("TurnouCode");
            this.Property(t => t.DiseaseTypeCode).HasColumnName("DiseaseTypeCode");
            this.Property(t => t.DiseaseOtherContent).HasColumnName("DiseaseOtherContent");
            this.Property(t => t.FacilityCode).HasColumnName("FacilityCode");
            this.Property(t => t.IsEvaluated).HasColumnName("IsEvaluated");
            this.Property(t => t.IsImported).HasColumnName("IsImported");
            this.Property(t => t.CreateTime).HasColumnName("CreateTime");
            this.Property(t => t.UpdateTime).HasColumnName("UpdateTime");
            this.Property(t => t.RowVersion).HasColumnName("RowVersion");
        }
    }
}
