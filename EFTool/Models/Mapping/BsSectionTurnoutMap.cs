	
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// <copyright file="BsSectionTurnoutMap.cs">
//        Copyright(c)2015   rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：李文学@上海同岩土木科技工程有限公司
//        所属工程：TY.*
//        生成时间：2016-12-15 09:53
// </copyright>
//------------------------------------------------------------------------------

	using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

namespace TY.SHMetroPlan.Data.Domain.Models.Mapping
{
    public class BsSectionTurnoutMap : EntityTypeConfiguration<BsSectionTurnout>
    {
        public BsSectionTurnoutMap()
        {
            // Primary Key
            this.HasKey(t => t.Id);

            // Properties
            this.Property(t => t.Id)
                .IsRequired()
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.EquipmentId)
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.EquipmentCode)
                .HasMaxLength(200);

            this.Property(t => t.ImageNum)
                .HasMaxLength(200);

            this.Property(t => t.RailType)
                .HasMaxLength(100);

            this.Property(t => t.FrogStructure)
                .HasMaxLength(100);

            this.Property(t => t.TopRailType)
                .HasMaxLength(100);

            this.Property(t => t.Remark)
                .HasMaxLength(200);

            // Table & Column Mappings
            this.ToTable("BsSectionTurnout");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.EquipmentId).HasColumnName("EquipmentId");
            this.Property(t => t.EquipmentCode).HasColumnName("EquipmentCode");
            this.Property(t => t.TurnoutType).HasColumnName("TurnoutType");
            this.Property(t => t.ImageNum).HasColumnName("ImageNum");
            this.Property(t => t.RunType).HasColumnName("RunType");
            this.Property(t => t.RailType).HasColumnName("RailType");
            this.Property(t => t.FrogNum).HasColumnName("FrogNum");
            this.Property(t => t.FrogStructure).HasColumnName("FrogStructure");
            this.Property(t => t.FrogLength).HasColumnName("FrogLength");
            this.Property(t => t.TopRailType).HasColumnName("TopRailType");
            this.Property(t => t.TopRailLength).HasColumnName("TopRailLength");
            this.Property(t => t.TurnoutAllLength).HasColumnName("TurnoutAllLength");
            this.Property(t => t.TurnoutFrontLength).HasColumnName("TurnoutFrontLength");
            this.Property(t => t.TopRailBaseLength).HasColumnName("TopRailBaseLength");
            this.Property(t => t.SwitchType).HasColumnName("SwitchType");
            this.Property(t => t.TopRailMileage).HasColumnName("TopRailMileage");
            this.Property(t => t.StraightSpeed).HasColumnName("StraightSpeed");
            this.Property(t => t.LateralSpeed).HasColumnName("LateralSpeed");
            this.Property(t => t.Remark).HasColumnName("Remark");
            this.Property(t => t.SortId).HasColumnName("SortId");
            this.Property(t => t.CreateTime).HasColumnName("CreateTime");
            this.Property(t => t.UpdateTime).HasColumnName("UpdateTime");
            this.Property(t => t.RowVersion).HasColumnName("RowVersion");

            // Relationships
            this.HasOptional(t => t.BsFacilityEquipment)
                .WithMany(t => t.BsSectionTurnouts)
                .HasForeignKey(d => d.EquipmentId);

        }
    }
}
