	
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// <copyright file="BsLineCurveMap.cs">
//        Copyright(c)2015   rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：李文学@上海同岩土木科技工程有限公司
//        所属工程：TY.*
//        生成时间：2016-12-15 09:52
// </copyright>
//------------------------------------------------------------------------------

	using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

namespace TY.SHMetroPlan.Data.Domain.Models.Mapping
{
    public class BsLineCurveMap : EntityTypeConfiguration<BsLineCurve>
    {
        public BsLineCurveMap()
        {
            // Primary Key
            this.HasKey(t => t.Id);

            // Properties
            this.Property(t => t.Id)
                .IsRequired()
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.RailId)
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.RailCode)
                .HasMaxLength(100);

            this.Property(t => t.CurveName)
                .HasMaxLength(100);

            this.Property(t => t.CurveCode)
                .HasMaxLength(100);

            this.Property(t => t.CurveAngle)
                .HasMaxLength(100);

            this.Property(t => t.Remark)
                .HasMaxLength(200);

            // Table & Column Mappings
            this.ToTable("BsLineCurve");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.RailId).HasColumnName("RailId");
            this.Property(t => t.RailCode).HasColumnName("RailCode");
            this.Property(t => t.CurveName).HasColumnName("CurveName");
            this.Property(t => t.CurveCode).HasColumnName("CurveCode");
            this.Property(t => t.CurveDirection).HasColumnName("CurveDirection");
            this.Property(t => t.CurveRadius).HasColumnName("CurveRadius");
            this.Property(t => t.CurveAngle).HasColumnName("CurveAngle");
            this.Property(t => t.CurveLength).HasColumnName("CurveLength");
            this.Property(t => t.LongChainLength).HasColumnName("LongChainLength");
            this.Property(t => t.StartRelaxation).HasColumnName("StartRelaxation");
            this.Property(t => t.EndRelaxation).HasColumnName("EndRelaxation");
            this.Property(t => t.SuperHigh).HasColumnName("SuperHigh");
            this.Property(t => t.Widen).HasColumnName("Widen");
            this.Property(t => t.MaxSpeed).HasColumnName("MaxSpeed");
            this.Property(t => t.Remark).HasColumnName("Remark");
            this.Property(t => t.SortId).HasColumnName("SortId");
            this.Property(t => t.CreateTime).HasColumnName("CreateTime");
            this.Property(t => t.UpdateTime).HasColumnName("UpdateTime");
            this.Property(t => t.RowVersion).HasColumnName("RowVersion");

            // Relationships
            this.HasOptional(t => t.BsLineRail)
                .WithMany(t => t.BsLineCurves)
                .HasForeignKey(d => d.RailId);

        }
    }
}
