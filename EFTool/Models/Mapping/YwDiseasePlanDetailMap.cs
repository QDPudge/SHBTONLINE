	
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
// <copyright file="YwDiseasePlanDetailMap.cs">
//        Copyright(c)2015   rights reserved.
//        CLR版本：4.0.30319.239
//        开发组织：李文学@上海同岩土木科技工程有限公司
//        所属工程：TY.*
//        生成时间：2016-12-15 09:54
// </copyright>
//------------------------------------------------------------------------------

	using System.ComponentModel.DataAnnotations.Schema;
using System.Data.Entity.ModelConfiguration;

namespace TY.SHMetroPlan.Data.Domain.Models.Mapping
{
    public class YwDiseasePlanDetailMap : EntityTypeConfiguration<YwDiseasePlanDetail>
    {
        public YwDiseasePlanDetailMap()
        {
            // Primary Key
            this.HasKey(t => t.Id);

            // Properties
            this.Property(t => t.Id)
                .IsRequired()
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.DiseaseId)
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.PlanId)
                .IsRequired()
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.DiseaseDataId)
                .IsFixedLength()
                .HasMaxLength(36);

            this.Property(t => t.DiseaseCode)
                .HasMaxLength(200);

            this.Property(t => t.PlanCode)
                .HasMaxLength(200);

            this.Property(t => t.PlanDetailCode)
                .HasMaxLength(200);

            this.Property(t => t.DoWay)
                .HasMaxLength(200);

            this.Property(t => t.DowayDesc)
                .HasMaxLength(400);

            this.Property(t => t.ExecRemark)
                .HasMaxLength(200);

            // Table & Column Mappings
            this.ToTable("YwDiseasePlanDetail");
            this.Property(t => t.Id).HasColumnName("Id");
            this.Property(t => t.DiseaseId).HasColumnName("DiseaseId");
            this.Property(t => t.PlanId).HasColumnName("PlanId");
            this.Property(t => t.DiseaseDataId).HasColumnName("DiseaseDataId");
            this.Property(t => t.DiseaseCode).HasColumnName("DiseaseCode");
            this.Property(t => t.PlanCode).HasColumnName("PlanCode");
            this.Property(t => t.PlanDetailCode).HasColumnName("PlanDetailCode");
            this.Property(t => t.DoWay).HasColumnName("DoWay");
            this.Property(t => t.DowayDesc).HasColumnName("DowayDesc");
            this.Property(t => t.PlanEmpNum).HasColumnName("PlanEmpNum");
            this.Property(t => t.ExecStartDate).HasColumnName("ExecStartDate");
            this.Property(t => t.ExecEndDate).HasColumnName("ExecEndDate");
            this.Property(t => t.ExecEmpNum).HasColumnName("ExecEmpNum");
            this.Property(t => t.IsCompleted).HasColumnName("IsCompleted");
            this.Property(t => t.FinishResult).HasColumnName("FinishResult");
            this.Property(t => t.ExecRemark).HasColumnName("ExecRemark");
            this.Property(t => t.CreateTime).HasColumnName("CreateTime");
            this.Property(t => t.UpdateTime).HasColumnName("UpdateTime");
            this.Property(t => t.RowVersion).HasColumnName("RowVersion");

            // Relationships
            this.HasRequired(t => t.YwDiseasePlan)
                .WithMany(t => t.YwDiseasePlanDetails)
                .HasForeignKey(d => d.PlanId);
            this.HasOptional(t => t.YwDiseaseRecord)
                .WithMany(t => t.YwDiseasePlanDetails)
                .HasForeignKey(d => d.DiseaseId);

        }
    }
}
